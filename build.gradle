buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
//ant.importBuild 'download-api.xml'
//ant.importBuild 'build-ant.xml'

//apply plugin: 'curseforge'

version = "0.9.3"
def buildby = 'local'

def ENV = System.getenv()
if (ENV.BUILD_NUMBER) {
	version += "." + ENV.BUILD_NUMBER
	buildby = 'RS485-Jenkins'
} else {
	version += ".local"
}

group= "rs485.logisticspipes" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "logisticspipes"

ant.version = version
ant.archivesBaseName = archivesBaseName


repositories {

    ivy {
        name "BuildCraft-local"
        artifactPattern System.getProperty( "file://C:/maven/.m2/repository/com/mod-buildcraft/BuildCraft/[revision]/[module]-[revision].[ext]")
    }

//    ivy {
//        name "BuildCraft-local"
//        artifactPattern System.getProperty("user.home") + "/.m2/repository/com/mod-buildcraft/BuildCraft/[revision]/[module]-[revision].[ext]"
//    }



      maven {
          name = "OC repo"
          url = "http://maven.cil.li/"
      }





}
    dependencies {
        deobfCompile "li.cil.oc:OpenComputers:MC1.8.9-1.5.22.7-dev"
        deobfCompile "com.mod-buildcraft:buildcraft:7.2.0-pre12"
      //  deobfCompile "ComputerCraft:1.78:universal"


    }



    minecraft {
        version = "1.8.9-11.15.1.1722"
        runDir = "run/assets"
        replace '%VERSION%', project.version
        replace '%MCVERSION%', "1.7.10"
        replace '%DEBUG%', "false"
        replaceIn "LogisticsPipes.java"
        replaceIn "LPConstants.java"
        mappings = "stable_20"
    }

    jar {
        manifest {
            attributes('FMLCorePlugin': 'logisticspipes.asm.LogisticsPipesCoreLoader',
                    'FMLCorePluginContainsFMLMod': 'true',
                    'Implementation-Vendor': 'RS485',
                    'Implementation-Title': 'LogisticsPipes',
                    'Implementation-Version': version,
                    'Built-By': buildby)
        }
    }

// configure  the source folders
    sourceSets {
        main {
            java {
                srcDir 'common'
                // exclude 'some exclusion'
                // include 'some inclusion'
            }
            resources {
                srcDir 'resources'
                // exclude 'some exclusion'
                // include 'some inclusion'
            }
        }
        api {
            java {
                srcDir 'dummy'
                srcDir 'api'
                // exclude 'some exclusion'
                // include 'some inclusion'
            }
        }
    }

    processResources {
        // replace stuff in mcmod.info, nothing else
        from(sourceSets.main.resources.srcDirs) {
            include 'mcmod.info'

            // replace version and mcversion
            expand 'version': project.version, 'mcversion': project.minecraft.version
        }

        // copy everything else, thats not the mcmod.info
        from(sourceSets.main.resources.srcDirs) {
            exclude 'mcmod.info'
        }
    }

    dependencies {
        compile 'org.projectlombok:lombok:1.16.4'
    }

    idea {
        module {
            sourceDirs += file('dummy')
            sourceDirs += file('api')
        }
    }

    task deobfJar(type: Jar, dependsOn: 'jar') {
        from sourceSets.main.output
        classifier = 'dev'
        manifest {
            attributes('FMLCorePlugin': 'logisticspipes.asm.LogisticsPipesCoreLoader',
                    'FMLCorePluginContainsFMLMod': 'true',
                    'Implementation-Vendor': 'RS485',
                    'Implementation-Title': 'LogisticsPipes',
                    'Implementation-Version': version,
                    'Built-By': buildby)
        }
    }

//task sourceJar(type: Jar, dependsOn: 'jar') {
//	from sourceSets.main.allSource
//	classifier = 'src'
//}

//curse {
//	displayName = 'Logistics Pipes 0.9.3 (BC7) build ' + System.getenv().BUILD_NUMBER
//	
//    projectId = '232838'
//    apiKey = project.hasProperty('curseForgeApiKey') ? project.curseForgeApiKey : ''
//    releaseType = 'release'
//
//    changelog = project.hasProperty('changelog') ? project.changelog : ''
//}

    artifacts {
        archives deobfJar
        archives sourceJar
        archives jar
    }

    tasks.compileApiJava.dependsOn('extract')
    tasks.compileJava.dependsOn('loadFingerprints')
    tasks.processResources.dependsOn('integrateLang')
    tasks.assemble.dependsOn('deobfJar', 'sourceJar', 'signJars')
